import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl

  // Check for Supabase auth cookies (they have the project ref in the name)
  const allCookies = request.cookies.getAll()
  const hasAuthCookie = allCookies.some(
    (cookie) =>
      cookie.name.includes('sb-') &&
      cookie.name.includes('-auth-token')
  )

  console.log('üîí Middleware check:', { pathname, hasAuthCookie, cookies: allCookies.map(c => c.name) })

  // If user is not logged in and trying to access protected routes
  if (!hasAuthCookie && pathname.startsWith('/dashboard')) {
    console.log('‚ùå No auth, redirecting to login')
    const loginUrl = new URL('/login', request.url)
    return NextResponse.redirect(loginUrl)
  }

  // If user is logged in and trying to access login page
  if (hasAuthCookie && pathname === '/login') {
    console.log('‚úÖ Has auth, redirecting to dashboard')
    const dashboardUrl = new URL('/dashboard', request.url)
    return NextResponse.redirect(dashboardUrl)
  }

  return NextResponse.next()
}

export const config = {
  matcher: ['/dashboard/:path*', '/login'],
}
